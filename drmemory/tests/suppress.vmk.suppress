# **********************************************************
# Copyright (c) 2009-2010 VMware, Inc.  All rights reserved.
# **********************************************************
#
# Dr. Memory: the memory debugger
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation;
# version 2.1 of the License, and no later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# FIXME: once PR 363063 is fixed and we have module names on visor, then we
# don't need this file anymore - suppress.lin.suppress will work for both linux
# and visor.
#
# uninitialized read: full callstack based mod+offs suppression
UNINITIALIZED READ
<+0x575>
<+0x596>
<+0x81f>

# uninitialized read: top frames based mod+offs suppression
UNINITIALIZED READ
<+0x575>
<+0x5a9>

# uninitialized read: full callstack based mod!func suppression
UNINITIALIZED READ
suppress!do_uninit_read
suppress!uninit_test3
suppress!test
suppress!main

# uninitialized read: top frames based mod!func suppression
UNINITIALIZED READ
suppress!do_uninit_read
suppress!uninit_test4

# uninitialized read: vertical wildcard
UNINITIALIZED READ
...
suppress!uninit_test5

# uninitialized read: vertical wildcard
UNINITIALIZED READ
...
suppress!uninit_test6

# uninitialized read: vertical wildcard
UNINITIALIZED READ
...
suppress!uninit_test7

#-------------------------------------------------------------------------------

# unaddressable access: full callstack based mod+offs suppression
UNADDRESSABLE ACCESS
<+0x664>
<+0x899>
<+0x91c>

# unaddressable access: top frame based mod+offs suppression
UNADDRESSABLE ACCESS
<+0x68f>

# unaddressable access: full callstack based mod!func suppression
# also tests wildcard
UNADDRESSABLE ACCESS
suppress!unaddr_*3
supp*!test

# unaddressable access: top 2 frames based mod!func suppression
UNADDRESSABLE ACCESS
suppress!unaddr_test4
suppress!test

#-------------------------------------------------------------------------------

# leak: full callstack based mod+offs suppression
LEAK
<+0x712>
<+0x8ce>
<+0x91c>

# leak: top frame based mod+offs suppression
LEAK
<+0x737>

# leak: full callstack based mod!func suppression
LEAK
suppress!leak_test3
suppress!test
suppress!main

# leak: top frame based mod!func suppression
LEAK
suppress!leak_test4

# possible leak: top frame based mod!func suppression
POSSIBLE LEAK
suppress!possible_leak_test1

# possible leak: top frame based mod!func suppression
LEAK
suppress!possible_leak_test2

#-------------------------------------------------------------------------------

UNADDRESSABLE ACCESS
suppress!invalid_free_test1

LEAK
suppress!invalid_free_test1

INVALID HEAP ARGUMENT
suppress!invalid_free_test1

WARNING
*!warning_test1
